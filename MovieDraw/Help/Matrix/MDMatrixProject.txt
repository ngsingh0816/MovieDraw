<name>MDMatrixProject</name>
<type>
	<name>Function</name>
	<return>
		<type>MDVector3</type>
		<desc>Returns the window coordinates for the specified object  coordinates.</desc>
	</return>
	<argument0>
		<type>MDVector3</type>
		<name>obj</name>
		<desc>The object coordinates, which are the coordinates of the points before they are transformed by the projection and model view matrices.</desc>
	</argument0>
	<argument1>
		<type>MDMatrix</type>
		<name>modelview</name>
		<desc>The model view matrix.</desc>
	</argument1>
	<argument2>
		<type>MDMatrix</type>
		<name>projection</name>
		<desc>The projection matrix.</desc>
	</argument2>
	<argument3>
		<type>int*</type>
		<name>viewport</name>
		<desc>The four component integer viewport that can be obtained from glGetIntegerv(GL_VIEWPORT, viewport). It is usually (0, 0, windowWidth, windowHeight).</desc>
	</argument3>
</type>
<desc>This function maps object coordinates to window coordinates.</desc>
<example>
MDMatrix projection = //...
MDMatrix modelView = //...
int* viewport;
glGetIntegerv(GL_VIEWPORT, viewport);
// Projects object coordinates to window coordinates
MDVector3 vector = MDMatrixProject(MDVector3Create(-3, 0, -5), modelView, projection, viewport);
</example>
<see>
	<entry0>
		<path>/Matrix/MDMatrix/MDMatrix.txt</path>
		<name>MDMatrix</name>
	</entry0>
	<entry1>
		<path>/Matrix/MDMatrixUnProject.txt</path>
		<name>MDMatrixUnProject(MDVector3 obj, MDMatrix modelView, MDMatrix projection, int* viewport)</name>
	</entry1>
	<entry2>
		<path>/Matrix/MDMatrixMultiply.txt</path>
		<name>MDMatrixMultiply(MDMatrix matrix1, MDMatrix matrix2)</name>
	</entry2>
</see>